{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file givenProvider.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar givenProvider = null; // ADD GIVEN PROVIDER\n\n/* jshint ignore:start */\n\nvar global;\n\ntry {\n  global = Function('return this')();\n} catch (e) {\n  global = window;\n} // EIP-1193: window.ethereum\n\n\nif (typeof global.ethereum !== 'undefined') {\n  givenProvider = global.ethereum; // Legacy web3.currentProvider\n} else if (typeof global.web3 !== 'undefined' && global.web3.currentProvider) {\n  if (global.web3.currentProvider.sendAsync) {\n    global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\n    delete global.web3.currentProvider.sendAsync;\n  } // if connection is 'ipcProviderWrapper', add subscription support\n\n\n  if (!global.web3.currentProvider.on && global.web3.currentProvider.connection && global.web3.currentProvider.connection.constructor.name === 'ipcProviderWrapper') {\n    global.web3.currentProvider.on = function (type, callback) {\n      if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n\n      switch (type) {\n        case 'data':\n          this.connection.on('data', function (data) {\n            var result = '';\n            data = data.toString();\n\n            try {\n              result = JSON.parse(data);\n            } catch (e) {\n              return callback(new Error('Couldn\\'t parse response data' + data));\n            } // notification\n\n\n            if (!result.id && result.method.indexOf('_subscription') !== -1) {\n              callback(null, result);\n            }\n          });\n          break;\n\n        default:\n          this.connection.on(type, callback);\n          break;\n      }\n    };\n  }\n\n  givenProvider = global.web3.currentProvider;\n}\n/* jshint ignore:end */\n\n\nmodule.exports = givenProvider;","map":{"version":3,"sources":["C:/Users/adars/OneDrive/Desktop/defi_yield_farming-main/node_modules/web3-core-requestmanager/src/givenProvider.js"],"names":["givenProvider","global","Function","e","window","ethereum","web3","currentProvider","sendAsync","send","on","connection","constructor","name","type","callback","Error","data","result","toString","JSON","parse","id","method","indexOf","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAG,IAApB,C,CAEA;;AACA;;AACA,IAAIC,MAAJ;;AACA,IAAI;AACFA,EAAAA,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAT;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;AACVF,EAAAA,MAAM,GAAGG,MAAT;AACD,C,CAED;;;AACA,IAAI,OAAOH,MAAM,CAACI,QAAd,KAA2B,WAA/B,EAA4C;AACxCL,EAAAA,aAAa,GAAGC,MAAM,CAACI,QAAvB,CADwC,CAG5C;AACC,CAJD,MAIO,IAAG,OAAOJ,MAAM,CAACK,IAAd,KAAuB,WAAvB,IAAsCL,MAAM,CAACK,IAAP,CAAYC,eAArD,EAAsE;AAEzE,MAAGN,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BC,SAA/B,EAA0C;AACtCP,IAAAA,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BE,IAA5B,GAAmCR,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BC,SAA/D;AACA,WAAOP,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BC,SAAnC;AACH,GALwE,CAOzE;;;AACA,MAAG,CAACP,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BG,EAA7B,IACCT,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BI,UAD7B,IAECV,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BI,UAA5B,CAAuCC,WAAvC,CAAmDC,IAAnD,KAA4D,oBAFhE,EAEsF;AAElFZ,IAAAA,MAAM,CAACK,IAAP,CAAYC,eAAZ,CAA4BG,EAA5B,GAAiC,UAAUI,IAAV,EAAgBC,QAAhB,EAA0B;AAEvD,UAAG,OAAOA,QAAP,KAAoB,UAAvB,EACI,MAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;;AAEJ,cAAOF,IAAP;AACI,aAAK,MAAL;AACI,eAAKH,UAAL,CAAgBD,EAAhB,CAAmB,MAAnB,EAA2B,UAASO,IAAT,EAAe;AACtC,gBAAIC,MAAM,GAAG,EAAb;AAEAD,YAAAA,IAAI,GAAGA,IAAI,CAACE,QAAL,EAAP;;AAEA,gBAAI;AACAD,cAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAT;AACH,aAFD,CAEE,OAAMd,CAAN,EAAS;AACP,qBAAOY,QAAQ,CAAC,IAAIC,KAAJ,CAAU,kCAAiCC,IAA3C,CAAD,CAAf;AACH,aATqC,CAWtC;;;AACA,gBAAG,CAACC,MAAM,CAACI,EAAR,IAAcJ,MAAM,CAACK,MAAP,CAAcC,OAAd,CAAsB,eAAtB,MAA2C,CAAC,CAA7D,EAAgE;AAC5DT,cAAAA,QAAQ,CAAC,IAAD,EAAOG,MAAP,CAAR;AACH;AAEJ,WAhBD;AAiBA;;AAEJ;AACI,eAAKP,UAAL,CAAgBD,EAAhB,CAAmBI,IAAnB,EAAyBC,QAAzB;AACA;AAvBR;AAyBH,KA9BD;AA+BH;;AAEDf,EAAAA,aAAa,GAAGC,MAAM,CAACK,IAAP,CAAYC,eAA5B;AACH;AACD;;;AAGAkB,MAAM,CAACC,OAAP,GAAiB1B,aAAjB","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file givenProvider.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar givenProvider = null;\n\n// ADD GIVEN PROVIDER\n/* jshint ignore:start */\nvar global;\ntry {\n  global = Function('return this')();\n} catch (e) {\n  global = window;\n}\n\n// EIP-1193: window.ethereum\nif (typeof global.ethereum !== 'undefined') {\n    givenProvider = global.ethereum;\n\n// Legacy web3.currentProvider\n} else if(typeof global.web3 !== 'undefined' && global.web3.currentProvider) {\n\n    if(global.web3.currentProvider.sendAsync) {\n        global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\n        delete global.web3.currentProvider.sendAsync;\n    }\n\n    // if connection is 'ipcProviderWrapper', add subscription support\n    if(!global.web3.currentProvider.on &&\n        global.web3.currentProvider.connection &&\n        global.web3.currentProvider.connection.constructor.name === 'ipcProviderWrapper') {\n\n        global.web3.currentProvider.on = function (type, callback) {\n\n            if(typeof callback !== 'function')\n                throw new Error('The second parameter callback must be a function.');\n\n            switch(type){\n                case 'data':\n                    this.connection.on('data', function(data) {\n                        var result = '';\n\n                        data = data.toString();\n\n                        try {\n                            result = JSON.parse(data);\n                        } catch(e) {\n                            return callback(new Error('Couldn\\'t parse response data'+ data));\n                        }\n\n                        // notification\n                        if(!result.id && result.method.indexOf('_subscription') !== -1) {\n                            callback(null, result);\n                        }\n\n                    });\n                    break;\n\n                default:\n                    this.connection.on(type, callback);\n                    break;\n            }\n        };\n    }\n\n    givenProvider = global.web3.currentProvider;\n}\n/* jshint ignore:end */\n\n\nmodule.exports = givenProvider;\n"]},"metadata":{},"sourceType":"script"}