{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _toConsumableArray = require(\"C:/Users/adars/OneDrive/Desktop/defi_yield_farming-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _ = require('underscore');\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar Account = require('eth-lib/lib/account');\n\nvar Hash = require('eth-lib/lib/hash');\n\nvar RLP = require('eth-lib/lib/rlp'); // jshint ignore:line\n\n\nvar Bytes = require('eth-lib/lib/bytes'); // jshint ignore:line\n\n\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\n\nvar scrypt = require('scrypt-js');\n\nvar uuid = require('uuid');\n\nvar utils = require('web3-utils');\n\nvar helpers = require('web3-core-helpers');\n\nvar Transaction = require('ethereumjs-tx').Transaction;\n\nvar Common = require('ethereumjs-common').default;\n\nvar isNot = function isNot(value) {\n  return _.isUndefined(value) || _.isNull(value);\n};\n\nvar Accounts = function Accounts() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // remove unecessary core functions\n\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  })]; // attach methods to this._ethereumCall\n\n  this._ethereumCall = {};\n\n  _.each(_ethereumCall, function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n\n  this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this; // add sign functions\n\n\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n\n  return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n      error = false,\n      transactionOptions = {},\n      hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n\n  callback = callback || function () {};\n\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  function signed(tx) {\n    if (tx.common && tx.chain && tx.hardfork) {\n      error = new Error('Please provide the ethereumjs-common object or the chain and hardfork property but not all together.');\n    }\n\n    if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n      error = new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n\n    if (!tx.gas && !tx.gasLimit) {\n      error = new Error('\"gas\" is missing');\n    }\n\n    if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n      error = new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n    }\n\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n      transaction.to = transaction.to || '0x';\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.chainId = utils.numberToHex(transaction.chainId); // Because tx has no ethereumjs-tx signing options we use fetched vals.\n\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, 'petersburg');\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || 'petersburg');\n          delete transaction.common;\n        }\n\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n\n      var ethTx = new Transaction(transaction, transactionOptions);\n      ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationResult = ethTx.validate(true);\n\n      if (validationResult !== '') {\n        throw new Error('Signer Error: ' + validationResult);\n      }\n\n      var rlpEncoded = ethTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n        v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n        r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n        s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  } // Resolve immediately if nonce, chainId, price and signing options are provided\n\n\n  if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  } // Otherwise, get the missing info from the Ethereum Node\n\n\n  return Promise.all([isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId, isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1]).then(function (args) {\n    if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n\n    return signed(_.extend(tx, {\n      chainId: args[0],\n      gasPrice: args[1],\n      nonce: args[2],\n      networkId: args[3]\n    }));\n  });\n};\n/* jshint ignore:start */\n\n\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  var values = RLP.decode(rawTx);\n  var signature = Account.encodeSignature(values.slice(6, 9));\n  var recovery = Bytes.toNumber(values[6]);\n  var extraData = recovery < 35 ? [] : [Bytes.fromNumber(recovery - 35 >> 1), '0x', '0x'];\n  var signingData = values.slice(0, 6).concat(extraData);\n  var signingDataHex = RLP.encode(signingData);\n  return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\n\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n\n  if (_.isObject(message)) {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n\n  return Account.recover(message, signature);\n}; // Taken from https://github.com/ethereumjs/ethereumjs-wallet\n\n\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!_.isString(password)) {\n    throw new Error('No password given.');\n  }\n\n  var json = _.isObject(v3Keystore) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([].concat(_toConsumableArray(decipher.update(ciphertext)), _toConsumableArray(decipher.final()))).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = Buffer.from([].concat(_toConsumableArray(cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex'))), _toConsumableArray(cipher.final())));\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n}; // Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\n\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n\n  if (_.has(this, pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\n\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\n\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n\n  return this;\n};\n\nWallet.prototype.add = function (account) {\n  if (_.isString(account)) {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\n\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address]; // address lowercase\n\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()]; // index\n\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nWallet.prototype.clear = function () {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\n\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\n\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\n\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\n\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n\n  return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\n\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' || // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nmodule.exports = Accounts;","map":{"version":3,"sources":["C:/Users/adars/OneDrive/Desktop/defi_yield_farming-main/node_modules/web3-eth-accounts/src/index.js"],"names":["_","require","core","Method","Account","Hash","RLP","Bytes","cryp","global","scrypt","uuid","utils","helpers","Transaction","Common","default","isNot","value","isUndefined","isNull","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","each","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","signed","gas","gasLimit","nonce","gasPrice","chainId","transaction","formatters","inputCallFormatter","clone","to","numberToHex","forCustomChain","networkId","baseChain","customChain","substring","ethTx","Buffer","from","validationResult","validate","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","hash","v","r","s","e","undefined","resolve","all","getChainId","getGasPrice","getTransactionCount","getNetworkId","then","args","JSON","stringify","recoverTransaction","rawTx","values","decode","signature","encodeSignature","slice","recovery","toNumber","extraData","fromNumber","signingData","concat","signingDataHex","encode","recover","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","keccak256s","vrs","decodeSignature","message","preFixed","apply","isObject","isBoolean","decrypt","v3Keystore","nonStrict","isString","json","parse","toLowerCase","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","has","_currentIndexes","keys","Object","indexes","map","key","filter","numberOfAccounts","i","add","index","remove","addressOrIndex","clear","forEach","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","type","storage","window","x","removeItem","code","module","exports"],"mappings":"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","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n'use strict';\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar RLP = require('eth-lib/lib/rlp');// jshint ignore:line\nvar Bytes = require('eth-lib/lib/bytes');// jshint ignore:line\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar Transaction = require('ethereumjs-tx').Transaction;\nvar Common = require('ethereumjs-common').default;\n\n\nvar isNot = function(value) {\n    return (_.isUndefined(value) || _.isNull(value));\n};\n\nvar Accounts = function Accounts() {\n    var _this = this;\n\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function(address) {\n                if (utils.isAddress(address)) {\n                    return address;\n                } else {\n                    throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                }\n            }, function() {\n                return 'latest';\n            }]\n        })\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _.each(_ethereumCall, function(method) {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n\n\n    this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function(account) {\n    var _this = this;\n\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n\n\n    return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this,\n        error = false,\n        transactionOptions = {},\n        hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n\n    callback = callback || function() {\n    };\n\n    if (!tx) {\n        error = new Error('No transaction object given!');\n\n        callback(error);\n        return Promise.reject(error);\n    }\n\n    function signed(tx) {\n        if (tx.common && (tx.chain && tx.hardfork)) {\n            error = new Error(\n                'Please provide the ethereumjs-common object or the chain and hardfork property but not all together.'\n            );\n        }\n\n        if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n            error = new Error(\n                'When specifying chain and hardfork, both values must be defined. ' +\n                'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork\n            );\n        }\n\n        if (!tx.gas && !tx.gasLimit) {\n            error = new Error('\"gas\" is missing');\n        }\n\n        if (tx.nonce < 0 ||\n            tx.gas < 0 ||\n            tx.gasPrice < 0 ||\n            tx.chainId < 0) {\n            error = new Error('Gas, gasPrice, nonce or chainId is lower than 0');\n        }\n\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(_.clone(tx));\n            transaction.to = transaction.to || '0x';\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.chainId = utils.numberToHex(transaction.chainId);\n\n            // Because tx has no ethereumjs-tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain(\n                    'mainnet',\n                    {\n                        name: 'custom-network',\n                        networkId: transaction.networkId,\n                        chainId: transaction.chainId\n                    },\n                    'petersburg'\n                );\n\n                delete transaction.networkId;\n            } else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(\n                        transaction.common.baseChain || 'mainnet',\n                        {\n                            name: transaction.common.customChain.name || 'custom-network',\n                            networkId: transaction.common.customChain.networkId,\n                            chainId: transaction.common.customChain.chainId\n                        },\n                        transaction.common.hardfork || 'petersburg'\n                    );\n\n                    delete transaction.common;\n                }\n\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n\n            var ethTx = new Transaction(transaction, transactionOptions);\n\n            ethTx.sign(Buffer.from(privateKey, 'hex'));\n\n            var validationResult = ethTx.validate(true);\n\n            if (validationResult !== '') {\n                throw new Error('Signer Error: ' + validationResult);\n            }\n\n            var rlpEncoded = ethTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n\n            var result = {\n                messageHash: '0x' + Buffer.from(ethTx.hash(false)).toString('hex'),\n                v: '0x' + Buffer.from(ethTx.v).toString('hex'),\n                r: '0x' + Buffer.from(ethTx.r).toString('hex'),\n                s: '0x' + Buffer.from(ethTx.s).toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n\n            callback(null, result);\n            return result;\n\n        } catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n\n\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined && hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1\n    ]).then(function(args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed(_.extend(tx, {chainId: args[0], gasPrice: args[1], nonce: args[2], networkId: args[3]}));\n    });\n};\n\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n    var values = RLP.decode(rawTx);\n    var signature = Account.encodeSignature(values.slice(6, 9));\n    var recovery = Bytes.toNumber(values[6]);\n    var extraData = recovery < 35 ? [] : [Bytes.fromNumber((recovery - 35) >> 1), '0x', '0x'];\n    var signingData = values.slice(0, 6).concat(extraData);\n    var signingDataHex = RLP.encode(signingData);\n    return Account.recover(Hash.keccak256(signingDataHex), signature);\n};\n/* jshint ignore:end */\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex)\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n\n\n    if (_.isObject(message)) {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\n\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function(v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n\n    if (!_.isString(password)) {\n        throw new Error('No password given.');\n    }\n\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n\n    return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function(privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    } else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    } else {\n        throw new Error('Unsupported kdf');\n    }\n\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n\n\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()]\n    );\n\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n\n    return {\n        version: 3,\n        id: uuid.v4({random: options.uuid || cryp.randomBytes(16)}),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n\n\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function(pointer) {\n    pointer = pointer || 0;\n    if (_.has(this, pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    } else {\n        return pointer;\n    }\n};\n\nWallet.prototype._currentIndexes = function() {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function(key) {\n            return parseInt(key);\n        })\n        .filter(function(n) {\n            return (n < 9e20);\n        });\n\n    return indexes;\n};\n\nWallet.prototype.create = function(numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\n\nWallet.prototype.add = function(account) {\n\n    if (_.isString(account)) {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n\n        this.length++;\n\n        return account;\n    } else {\n        return this[account.address];\n    }\n};\n\nWallet.prototype.remove = function(addressOrIndex) {\n    var account = this[addressOrIndex];\n\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n\n        this.length--;\n\n        return true;\n    } else {\n        return false;\n    }\n};\n\nWallet.prototype.clear = function() {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    indexes.forEach(function(index) {\n        _this.remove(index);\n    });\n\n    return this;\n};\n\nWallet.prototype.encrypt = function(password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n\n    var accounts = indexes.map(function(index) {\n        return _this[index].encrypt(password, options);\n    });\n\n    return accounts;\n};\n\n\nWallet.prototype.decrypt = function(encryptedWallet, password) {\n    var _this = this;\n\n    encryptedWallet.forEach(function(keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n\n        if (account) {\n            _this.add(account);\n        } else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n\n    return this;\n};\n\nWallet.prototype.save = function(password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n\n    return true;\n};\n\nWallet.prototype.load = function(password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        } catch (e) {\n\n        }\n    }\n\n    return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    } catch (e) {\n        return e && (\n                // everything except Firefox\n            e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\n\n\nmodule.exports = Accounts;\n"]},"metadata":{},"sourceType":"script"}