{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar Subscription = require('./subscription.js');\n\nvar Subscriptions = function Subscriptions(options) {\n  this.name = options.name;\n  this.type = options.type;\n  this.subscriptions = options.subscriptions || {};\n  this.requestManager = null;\n};\n\nSubscriptions.prototype.setRequestManager = function (rm) {\n  this.requestManager = rm;\n};\n\nSubscriptions.prototype.attachToObject = function (obj) {\n  var func = this.buildCall();\n  var name = this.name.split('.');\n\n  if (name.length > 1) {\n    obj[name[0]] = obj[name[0]] || {};\n    obj[name[0]][name[1]] = func;\n  } else {\n    obj[name[0]] = func;\n  }\n};\n\nSubscriptions.prototype.buildCall = function () {\n  var _this = this;\n\n  return function () {\n    if (!_this.subscriptions[arguments[0]]) {\n      console.warn('Subscription ' + JSON.stringify(arguments[0]) + ' doesn\\'t exist. Subscribing anyway.');\n    }\n\n    var subscription = new Subscription({\n      subscription: _this.subscriptions[arguments[0]] || {},\n      // Subscript might not exist\n      requestManager: _this.requestManager,\n      type: _this.type\n    });\n    return subscription.subscribe.apply(subscription, arguments);\n  };\n};\n\nmodule.exports = {\n  subscriptions: Subscriptions,\n  subscription: Subscription\n};","map":{"version":3,"sources":["C:/Users/adars/OneDrive/Desktop/defi_yield_farming-main/node_modules/web3-core-subscriptions/src/index.js"],"names":["Subscription","require","Subscriptions","options","name","type","subscriptions","requestManager","prototype","setRequestManager","rm","attachToObject","obj","func","buildCall","split","length","_this","arguments","console","warn","JSON","stringify","subscription","subscribe","apply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA1B;;AAGA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,OAAvB,EAAgC;AAChD,OAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAAR,IAAyB,EAA9C;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACH,CALD;;AAQAL,aAAa,CAACM,SAAd,CAAwBC,iBAAxB,GAA4C,UAAUC,EAAV,EAAc;AACtD,OAAKH,cAAL,GAAsBG,EAAtB;AACH,CAFD;;AAKAR,aAAa,CAACM,SAAd,CAAwBG,cAAxB,GAAyC,UAAUC,GAAV,EAAe;AACpD,MAAIC,IAAI,GAAG,KAAKC,SAAL,EAAX;AACA,MAAIV,IAAI,GAAG,KAAKA,IAAL,CAAUW,KAAV,CAAgB,GAAhB,CAAX;;AACA,MAAIX,IAAI,CAACY,MAAL,GAAc,CAAlB,EAAqB;AACjBJ,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeQ,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,IAAgB,EAA/B;AACAQ,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,CAAaA,IAAI,CAAC,CAAD,CAAjB,IAAwBS,IAAxB;AACH,GAHD,MAGO;AACHD,IAAAA,GAAG,CAACR,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeS,IAAf;AACH;AACJ,CATD;;AAYAX,aAAa,CAACM,SAAd,CAAwBM,SAAxB,GAAoC,YAAW;AAC3C,MAAIG,KAAK,GAAG,IAAZ;;AAEA,SAAO,YAAU;AACb,QAAG,CAACA,KAAK,CAACX,aAAN,CAAoBY,SAAS,CAAC,CAAD,CAA7B,CAAJ,EAAuC;AACnCC,MAAAA,OAAO,CAACC,IAAR,CAAa,kBAAiBC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAAC,CAAD,CAAxB,CAAjB,GAA+C,sCAA5D;AACH;;AAED,QAAIK,YAAY,GAAG,IAAIvB,YAAJ,CAAiB;AAChCuB,MAAAA,YAAY,EAAEN,KAAK,CAACX,aAAN,CAAoBY,SAAS,CAAC,CAAD,CAA7B,KAAqC,EADnB;AACuB;AACvDX,MAAAA,cAAc,EAAEU,KAAK,CAACV,cAFU;AAGhCF,MAAAA,IAAI,EAAEY,KAAK,CAACZ;AAHoB,KAAjB,CAAnB;AAMA,WAAOkB,YAAY,CAACC,SAAb,CAAuBC,KAAvB,CAA6BF,YAA7B,EAA2CL,SAA3C,CAAP;AACH,GAZD;AAaH,CAhBD;;AAmBAQ,MAAM,CAACC,OAAP,GAAiB;AACbrB,EAAAA,aAAa,EAAEJ,aADF;AAEbqB,EAAAA,YAAY,EAAEvB;AAFD,CAAjB","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar Subscription = require('./subscription.js');\n\n\nvar Subscriptions = function Subscriptions(options) {\n    this.name = options.name;\n    this.type = options.type;\n    this.subscriptions = options.subscriptions || {};\n    this.requestManager = null;\n};\n\n\nSubscriptions.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n\nSubscriptions.prototype.attachToObject = function (obj) {\n    var func = this.buildCall();\n    var name = this.name.split('.');\n    if (name.length > 1) {\n        obj[name[0]] = obj[name[0]] || {};\n        obj[name[0]][name[1]] = func;\n    } else {\n        obj[name[0]] = func;\n    }\n};\n\n\nSubscriptions.prototype.buildCall = function() {\n    var _this = this;\n\n    return function(){\n        if(!_this.subscriptions[arguments[0]]) {\n            console.warn('Subscription '+ JSON.stringify(arguments[0]) +' doesn\\'t exist. Subscribing anyway.');\n        }\n\n        var subscription = new Subscription({\n            subscription: _this.subscriptions[arguments[0]] || {}, // Subscript might not exist\n            requestManager: _this.requestManager,\n            type: _this.type\n        });\n\n        return subscription.subscribe.apply(subscription, arguments);\n    };\n};\n\n\nmodule.exports = {\n    subscriptions: Subscriptions,\n    subscription: Subscription\n};\n"]},"metadata":{},"sourceType":"script"}